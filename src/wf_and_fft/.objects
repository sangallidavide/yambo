FFT_more =
#if defined _YPP_RT || defined _YPP_NL
FFT_more = fft_1d.o
#endif
#if defined _YPP_RT && !defined _FFTW
FFT_more = fft_1d.o fft_singleton.o
#endif
#if defined _YPP_NL && !defined _FFTW
FFT_more = fft_1d.o fft_singleton.o
#endif
QED_more =
#if defined _QED
QED_more = scatter_Bamp_using_the_gradient.o
#endif
FFT_object = fft_3d_qe.o fft_desc_init.o
#if defined _FFTW
FFT_object = fft_3d_fftw.o
#endif
#if defined _FFTSG
FFT_object = fft_3d_sg.o sgfft.o 
#endif
WF_rot_object =
#if defined _SC
WF_rot_object = WF_rotate.o
#endif
#if defined _MAGNETIC || defined _RT
WF_der_objects = WF_derivative.o
#endif
objs = fft_setup.o fft_free.o $(FFT_object) $(FFT_more) $(QED_more) \
       fft_check_size.o WF_free.o WF_alloc.o WF_shift_kpoint.o WF_symm_kpoint.o  \
       scatter_Bamp.o scatter_Gamp.o WF_spatial_inversion.o \
       WF_load.o WF_symm.o WF_apply_symm.o $(WF_rot_object) \
       $(WF_der_objects) eval_R_minus_R.o scatter_Modscr.o load_cc.o \
       PP_uspp_init.o PP_addus_vloc_aug.o PP_vloc_augment.o PP_compute_becp.o \
       PP_becprod_calc.o PP_scatterBamp_init.o PP_rotate_becp.o PP_addus_rhotw_aug.o

