!
!        Copyright (C) 2000-2022 the YAMBO team
!              http://www.yambo-code.org
!
! Authors (see AUTHORS file for details): DS
! 
! This file is distributed under the terms of the GNU 
! General Public License. You can redistribute it and/or 
! modify it under the terms of the GNU General Public 
! License as published by the Free Software Foundation; 
! either version 2, or (at your option) any later version.
!
! This program is distributed in the hope that it will 
! be useful, but WITHOUT ANY WARRANTY; without even the 
! implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE.  See the GNU General Public License 
! for more details.
!
! You should have received a copy of the GNU General Public 
! License along with this program; if not, write to the Free 
! Software Foundation, Inc., 59 Temple Place - Suite 330,Boston, 
! MA 02111-1307, USA or visit http://www.gnu.org/copyleft/gpl.txt.
!
integer function variables_RT_dynamic(ID)
 !
 use pars,           ONLY:SP,IP
 use units,          ONLY:AUT2FS
 use RT_output_m,    ONLY:RT_desc,n_RT_desc_static,TIME_STEP_desc
 use RT_lifetimes,   ONLY:RT_life_extrap_times,RT_life_extrap_times
 use real_time,      ONLY:RT_dyn_step,NE_initial_time_step_update,NE_time_step_update_jump,&
&                         NE_time,NE_i_time,NE_time_step_update_jump_INPUT, &
&                         l_Update_Time_Step,NE_step_update_treshold,RT_MAX_step
 use IO_m,           ONLY:io_status
 use IO_int,         ONLY:io_variable_elemental,def_variable_elemental
 !
 implicit none
 !
 integer            :: ID
 !
 logical            :: l_disk_flag
 integer, external  :: io_descriptors
 !
 RT_desc%n=n_RT_desc_static
 !
 ! RT_DYNAMICS
 !
 call def_variable_elemental(ID,VAR="RT_TIMEs_NOW",VAR_SZ=5,VAR_KIND=SP,MENU=0) 
 call io_variable_elemental(ID,&
&    VAR=" [RT] Time step(now)",R0=RT_dyn_step,DB_R0=RT_dyn_step,WARN=.true.,OP=(/"=="/),TERMINATOR="[fs]",UNIT=AUT2FS,&
&    DESCRIPTOR=RT_desc)
 call io_variable_elemental(ID,&
&    VAR=" [RT] NE time(done)",R0=NE_time,WARN=.true.,OP=(/"=="/),UNIT=AUT2FS,DESCRIPTOR=RT_desc,TERMINATOR="[fs]")
 call io_variable_elemental(ID,&
&    VAR=" [RT] NE steps(done)",I0=NE_i_time,WARN=.true.,OP=(/"=="/),DESCRIPTOR=RT_desc,TERMINATOR="[fs]")
 !
 call io_variable_elemental(ID,VAR=" [RT] Lif Extr Inte/Intr(now)",R1=RT_life_extrap_times,DB_R1=RT_life_extrap_times,&
&    DESCRIPTOR=RT_desc,UNIT=AUT2FS,TERMINATOR="[fs]")
 !
 ! Delta T Update
 !   
 call def_variable_elemental(ID,VAR="DELTA_T_UPDATE",VAR_SZ=6,VAR_KIND=SP,MENU=0) 
 call io_variable_elemental(ID,L0=l_Update_Time_Step,DB_L0=l_disk_flag,&
&    VAR=' [dT] Time-Dependent Time step',CHECK=.true.,OP=(/"=="/),DESCRIPTOR=RT_desc,UNIT=AUT2FS)
 if (l_disk_flag) then
   call io_variable_elemental(ID,R0=NE_initial_time_step_update,&
&    VAR=' [dT] Starting Time',CHECK=.true.,OP=(/"=="/),DESCRIPTOR=RT_desc,UNIT=AUT2FS,TERMINATOR="[fs]")
   call io_variable_elemental(ID,R0=NE_time_step_update_jump_INPUT,&
&    VAR=' [dT] Update interval',CHECK=.true.,OP=(/"=="/),DESCRIPTOR=RT_desc,UNIT=AUT2FS,TERMINATOR="[fs]")
   call io_variable_elemental(ID,R0=NE_step_update_treshold,&
&    VAR=' [dT] Update interval tresh',CHECK=.true.,OP=(/"=="/),DESCRIPTOR=RT_desc,TERMINATOR="[o/o]")
   call io_variable_elemental(ID,R0=RT_MAX_step,&
&    VAR=' [dT] Max step in dynamics',CHECK=.true.,OP=(/"=="/),DESCRIPTOR=RT_desc,UNIT=AUT2FS,TERMINATOR="[fs]")
 endif
 ! ... for RESTART purposes...
 call io_variable_elemental(ID,R0=NE_time_step_update_jump, DB_R0=NE_time_step_update_jump,CHECK=.FALSE.)
 !
 variables_RT_dynamic=io_descriptors(TIME_STEP_desc,"TIME_STEP",ID,.FALSE.)
 !
 call def_variable_elemental(ID,VAR="",VAR_SZ=0,VAR_KIND=0,MENU=1)
 !
 variables_RT_dynamic      =io_status(ID)
 !
end function variables_RT_dynamic
