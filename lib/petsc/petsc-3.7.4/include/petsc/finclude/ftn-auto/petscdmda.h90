      subroutine DMDAGlobalToNaturalAllCreate(a,b,z)
       DM a ! DM
       VecScatter b ! VecScatter
       integer z
       end subroutine
      subroutine DMDANaturalAllToGlobalCreate(a,b,z)
       DM a ! DM
       VecScatter b ! VecScatter
       integer z
       end subroutine
      subroutine DMDAGetGhostCorners(a,b,c,d,e,f,g,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       PetscInt f ! PetscInt
       PetscInt g ! PetscInt
       integer z
       end subroutine
      subroutine DMDAConvertToCell(a,b,c,z)
       DM a ! DM
       MatStencil b ! MatStencil
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine DMCreateInterpolationScale(a,b,c,d,z)
       DM a ! DM
       DM b ! DM
       Mat c ! Mat
       Vec d ! Vec
       integer z
       end subroutine
      subroutine DMDAGetCorners(a,b,c,d,e,f,g,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       PetscInt f ! PetscInt
       PetscInt g ! PetscInt
       integer z
       end subroutine
      subroutine DMDAGetLocalBoundingBox(a,b,c,z)
       DM a ! DM
       PetscReal b (*) ! PetscReal
       PetscReal c (*) ! PetscReal
       integer z
       end subroutine
      subroutine DMDAGetBoundingBox(a,b,c,z)
       DM a ! DM
       PetscReal b (*) ! PetscReal
       PetscReal c (*) ! PetscReal
       integer z
       end subroutine
      subroutine DMDAGetReducedDMDA(a,b,c,z)
       DM a ! DM
       PetscInt b ! PetscInt
       DM c ! DM
       integer z
       end subroutine
      subroutine DMDASetSizes(a,b,c,d,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       integer z
       end subroutine
      subroutine DMDASetNumProcs(a,b,c,d,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       integer z
       end subroutine
      subroutine DMDASetBoundaryType(a,b,c,d,z)
       DM a ! DM
       DMBoundaryType b ! DMBoundaryType
       DMBoundaryType c ! DMBoundaryType
       DMBoundaryType d ! DMBoundaryType
       integer z
       end subroutine
      subroutine DMDASetDof(a,b,z)
       DM a ! DM
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine DMDAGetDof(a,b,z)
       DM a ! DM
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine DMDAGetOverlap(a,b,c,d,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       integer z
       end subroutine
      subroutine DMDASetOverlap(a,b,c,d,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       integer z
       end subroutine
      subroutine DMDAGetNumLocalSubDomains(a,b,z)
       DM a ! DM
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine DMDASetNumLocalSubDomains(a,b,z)
       DM a ! DM
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine DMDASetOffset(a,b,c,d,e,f,g,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       PetscInt f ! PetscInt
       PetscInt g ! PetscInt
       integer z
       end subroutine
      subroutine DMDAGetOffset(a,b,c,d,e,f,g,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       PetscInt f ! PetscInt
       PetscInt g ! PetscInt
       integer z
       end subroutine
      subroutine DMDAGetNonOverlappingRegion(a,b,c,d,e,f,g,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       PetscInt f ! PetscInt
       PetscInt g ! PetscInt
       integer z
       end subroutine
      subroutine DMDASetNonOverlappingRegion(a,b,c,d,e,f,g,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       PetscInt f ! PetscInt
       PetscInt g ! PetscInt
       integer z
       end subroutine
      subroutine DMDASetStencilType(a,b,z)
       DM a ! DM
       DMDAStencilType b ! DMDAStencilType
       integer z
       end subroutine
      subroutine DMDAGetStencilType(a,b,z)
       DM a ! DM
       DMDAStencilType b ! DMDAStencilType
       integer z
       end subroutine
      subroutine DMDASetStencilWidth(a,b,z)
       DM a ! DM
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine DMDAGetStencilWidth(a,b,z)
       DM a ! DM
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine DMDASetOwnershipRanges(a,b,c,d,z)
       DM a ! DM
       PetscInt b (*) ! PetscInt
       PetscInt c (*) ! PetscInt
       PetscInt d (*) ! PetscInt
       integer z
       end subroutine
      subroutine DMDASetInterpolationType(a,b,z)
       DM a ! DM
       DMDAInterpolationType b ! DMDAInterpolationType
       integer z
       end subroutine
      subroutine DMDAGetInterpolationType(a,b,z)
       DM a ! DM
       DMDAInterpolationType b ! DMDAInterpolationType
       integer z
       end subroutine
      subroutine DMDASetRefinementFactor(a,b,c,d,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       integer z
       end subroutine
      subroutine DMDACreateNaturalVector(a,b,z)
       DM a ! DM
       Vec b ! Vec
       integer z
       end subroutine
      subroutine DMDACreate(a,b,z)
       integer a ! MPI_Comm
       DM b ! DM
       integer z
       end subroutine
      subroutine DMDAGetAO(a,b,z)
       DM a ! DM
       AO b ! AO
       integer z
       end subroutine
      subroutine DMDACreatePatchIS(a,b,c,d,z)
       DM a ! DM
       MatStencil b ! MatStencil
       MatStencil c ! MatStencil
       IS d ! IS
       integer z
       end subroutine
      subroutine DMDAGetNumCells(a,b,c,d,e,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       integer z
       end subroutine
      subroutine DMDAGetCellPoint(a,b,c,d,e,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       integer z
       end subroutine
      subroutine DMDAGlobalToNaturalBegin(a,b,c,d,z)
       DM a ! DM
       Vec b ! Vec
       InsertMode c ! InsertMode
       Vec d ! Vec
       integer z
       end subroutine
      subroutine DMDAGlobalToNaturalEnd(a,b,c,d,z)
       DM a ! DM
       Vec b ! Vec
       InsertMode c ! InsertMode
       Vec d ! Vec
       integer z
       end subroutine
      subroutine DMDANaturalToGlobalBegin(a,b,c,d,z)
       DM a ! DM
       Vec b ! Vec
       InsertMode c ! InsertMode
       Vec d ! Vec
       integer z
       end subroutine
      subroutine DMDANaturalToGlobalEnd(a,b,c,d,z)
       DM a ! DM
       Vec b ! Vec
       InsertMode c ! InsertMode
       Vec d ! Vec
       integer z
       end subroutine
      subroutine DMDASetUniformCoordinates(a,b,c,d,e,f,g,z)
       DM a ! DM
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
       PetscReal d ! PetscReal
       PetscReal e ! PetscReal
       PetscReal f ! PetscReal
       PetscReal g ! PetscReal
       integer z
       end subroutine
      subroutine DMDASetPreallocationCenterDimension(a,b,z)
       DM a ! DM
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine DMDAGetPreallocationCenterDimension(a,b,z)
       DM a ! DM
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine DMDASetBlockFills(a,b,c,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
