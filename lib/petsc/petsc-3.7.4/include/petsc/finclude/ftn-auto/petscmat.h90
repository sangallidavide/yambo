      subroutine MatDenseGetLocalMatrix(a,b,z)
       Mat a ! Mat
       Mat b ! Mat
       integer z
       end subroutine
      subroutine MatSeqBAIJSetColumnIndices(a,b,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine MatCreateSeqBAIJWithArrays(a,b,c,d,e,f,g,h,z)
       integer a ! MPI_Comm
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       PetscInt f ! PetscInt
       PetscScalar g ! PetscScalar
       Mat h ! Mat
       integer z
       end subroutine
      subroutine MatCUSPARSESetFormat(a,b,c,z)
       Mat a ! Mat
       MatCUSPARSEFormatOperation b ! MatCUSPARSEFormatOperation
       MatCUSPARSEStorageFormat c ! MatCUSPARSEStorageFormat
       integer z
       end subroutine
      subroutine MatCreateSeqAIJCUSPARSE(a,b,c,d,e,f,z)
       integer a ! MPI_Comm
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e (*) ! PetscInt
       Mat f ! Mat
       integer z
       end subroutine
      subroutine MatCreateMPISBAIJWithArrays(a,b,c,d,e,f,g,h,i,j,z)
       integer a ! MPI_Comm
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       PetscInt f ! PetscInt
       PetscInt g (*) ! PetscInt
       PetscInt h (*) ! PetscInt
       PetscScalar i (*) ! PetscScalar
       Mat j ! Mat
       integer z
       end subroutine
      subroutine MatCUSPSetFormat(a,b,c,z)
       Mat a ! Mat
       MatCUSPFormatOperation b ! MatCUSPFormatOperation
       MatCUSPStorageFormat c ! MatCUSPStorageFormat
       integer z
       end subroutine
      subroutine MatCreateSeqAIJCUSP(a,b,c,d,e,f,z)
       integer a ! MPI_Comm
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e (*) ! PetscInt
       Mat f ! Mat
       integer z
       end subroutine
      subroutine MatCreateHermitianTranspose(a,b,z)
       Mat a ! Mat
       Mat b ! Mat
       integer z
       end subroutine
      subroutine MatCreateTranspose(a,b,z)
       Mat a ! Mat
       Mat b ! Mat
       integer z
       end subroutine
      subroutine MatMPIBAIJSetHashTableFactor(a,b,z)
       Mat a ! Mat
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine MatCreateMPIBAIJWithArrays(a,b,c,d,e,f,g,h,i,j,z)
       integer a ! MPI_Comm
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       PetscInt f ! PetscInt
       PetscInt g (*) ! PetscInt
       PetscInt h (*) ! PetscInt
       PetscScalar i (*) ! PetscScalar
       Mat j ! Mat
       integer z
       end subroutine
      subroutine MatMPIAdjCreateNonemptySubcommMat(a,b,z)
       Mat a ! Mat
       Mat b ! Mat
       integer z
       end subroutine
      subroutine MatMkl_PardisoSetCntl(a,b,c,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine MatSeqSBAIJSetColumnIndices(a,b,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine MatCreateSeqSBAIJWithArrays(a,b,c,d,e,f,g,h,z)
       integer a ! MPI_Comm
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       PetscInt f ! PetscInt
       PetscScalar g ! PetscScalar
       Mat h ! Mat
       integer z
       end subroutine
      subroutine MatMAIJGetAIJ(a,b,z)
       Mat a ! Mat
       Mat b ! Mat
       integer z
       end subroutine
      subroutine MatISSetPreallocation(a,b,c,d,e,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       PetscInt c (*) ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e (*) ! PetscInt
       integer z
       end subroutine
      subroutine MatISGetMPIXAIJ(a,b,c,z)
       Mat a ! Mat
       MatReuse b ! MatReuse
       Mat c ! Mat
       integer z
       end subroutine
      subroutine MatISGetLocalMat(a,b,z)
       Mat a ! Mat
       Mat b ! Mat
       integer z
       end subroutine
      subroutine MatISSetLocalMat(a,b,z)
       Mat a ! Mat
       Mat b ! Mat
       integer z
       end subroutine
      subroutine MatCreateIS(a,b,c,d,e,f,g,h,i,z)
       integer a ! MPI_Comm
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       PetscInt f ! PetscInt
       ISLocalToGlobalMapping g ! ISLocalToGlobalMapping
       ISLocalToGlobalMapping h ! ISLocalToGlobalMapping
       Mat i ! Mat
       integer z
       end subroutine
      subroutine MatCreateSubMatrix(a,b,c,d,z)
       Mat a ! Mat
       IS b ! IS
       IS c ! IS
       Mat d ! Mat
       integer z
       end subroutine
      subroutine MatSubMatrixUpdate(a,b,c,d,z)
       Mat a ! Mat
       Mat b ! Mat
       IS c ! IS
       IS d ! IS
       integer z
       end subroutine
      subroutine MatCreateAIJCUSPARSE(a,b,c,d,e,f,g,h,i,j,z)
       integer a ! MPI_Comm
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       PetscInt f ! PetscInt
       PetscInt g (*) ! PetscInt
       PetscInt h ! PetscInt
       PetscInt i (*) ! PetscInt
       Mat j ! Mat
       integer z
       end subroutine
      subroutine MatCreateComposite(a,b,c,d,z)
       integer a ! MPI_Comm
       PetscInt b ! PetscInt
       Mat c ! Mat
       Mat d ! Mat
       integer z
       end subroutine
      subroutine MatCompositeAddMat(a,b,z)
       Mat a ! Mat
       Mat b ! Mat
       integer z
       end subroutine
      subroutine MatCompositeSetType(a,b,z)
       Mat a ! Mat
       MatCompositeType b ! MatCompositeType
       integer z
       end subroutine
      subroutine MatSetRandom(a,b,z)
       Mat a ! Mat
       PetscRandom b ! PetscRandom
       integer z
       end subroutine
      subroutine MatFindNonzeroRows(a,b,z)
       Mat a ! Mat
       IS b ! IS
       integer z
       end subroutine
      subroutine MatGetDiagonalBlock(a,b,z)
       Mat a ! Mat
       Mat b ! Mat
       integer z
       end subroutine
      subroutine MatGetTrace(a,b,z)
       Mat a ! Mat
       PetscScalar b ! PetscScalar
       integer z
       end subroutine
      subroutine MatRealPart(a,z)
       Mat a ! Mat
       integer z
       end subroutine
      subroutine MatImaginaryPart(a,z)
       Mat a ! Mat
       integer z
       end subroutine
      subroutine MatMissingDiagonal(a,b,c,z)
       Mat a ! Mat
       PetscBool b ! PetscBool
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine MatConjugate(a,z)
       Mat a ! Mat
       integer z
       end subroutine
      subroutine MatGetRowUpperTriangular(a,z)
       Mat a ! Mat
       integer z
       end subroutine
      subroutine MatRestoreRowUpperTriangular(a,z)
       Mat a ! Mat
       integer z
       end subroutine
      subroutine MatSetUp(a,z)
       Mat a ! Mat
       integer z
       end subroutine
      subroutine MatDestroy(a,z)
       Mat a ! Mat
       integer z
       end subroutine
      subroutine MatSetValues(a,b,c,d,e,f,g,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       PetscInt c (*) ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e (*) ! PetscInt
       PetscScalar f (*) ! PetscScalar
       InsertMode g ! InsertMode
       integer z
       end subroutine
      subroutine MatSetValuesRowLocal(a,b,c,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       PetscScalar c (*) ! PetscScalar
       integer z
       end subroutine
      subroutine MatSetValuesRow(a,b,c,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       PetscScalar c (*) ! PetscScalar
       integer z
       end subroutine
      subroutine MatSetValuesStencil(a,b,c,d,e,f,g,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       MatStencil c (*) ! MatStencil
       PetscInt d ! PetscInt
       MatStencil e (*) ! MatStencil
       PetscScalar f (*) ! PetscScalar
       InsertMode g ! InsertMode
       integer z
       end subroutine
      subroutine MatSetValuesBlockedStencil(a,b,c,d,e,f,g,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       MatStencil c (*) ! MatStencil
       PetscInt d ! PetscInt
       MatStencil e (*) ! MatStencil
       PetscScalar f (*) ! PetscScalar
       InsertMode g ! InsertMode
       integer z
       end subroutine
      subroutine MatSetStencil(a,b,c,d,e,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       PetscInt c (*) ! PetscInt
       PetscInt d (*) ! PetscInt
       PetscInt e ! PetscInt
       integer z
       end subroutine
      subroutine MatSetValuesBlocked(a,b,c,d,e,f,g,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       PetscInt c (*) ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e (*) ! PetscInt
       PetscScalar f (*) ! PetscScalar
       InsertMode g ! InsertMode
       integer z
       end subroutine
      subroutine MatGetValues(a,b,c,d,e,f,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       PetscInt c (*) ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e (*) ! PetscInt
       PetscScalar f (*) ! PetscScalar
       integer z
       end subroutine
      subroutine MatSetValuesBatch(a,b,c,d,e,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d (*) ! PetscInt
       PetscScalar e (*) ! PetscScalar
       integer z
       end subroutine
      subroutine MatSetLocalToGlobalMapping(a,b,c,z)
       Mat a ! Mat
       ISLocalToGlobalMapping b ! ISLocalToGlobalMapping
       ISLocalToGlobalMapping c ! ISLocalToGlobalMapping
       integer z
       end subroutine
      subroutine MatGetLocalToGlobalMapping(a,b,c,z)
       Mat a ! Mat
       ISLocalToGlobalMapping b ! ISLocalToGlobalMapping
       ISLocalToGlobalMapping c ! ISLocalToGlobalMapping
       integer z
       end subroutine
      subroutine MatGetLayouts(a,b,c,z)
       Mat a ! Mat
       PetscLayout b ! PetscLayout
       PetscLayout c ! PetscLayout
       integer z
       end subroutine
      subroutine MatSetValuesLocal(a,b,c,d,e,f,g,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       PetscInt c (*) ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e (*) ! PetscInt
       PetscScalar f (*) ! PetscScalar
       InsertMode g ! InsertMode
       integer z
       end subroutine
      subroutine MatSetValuesBlockedLocal(a,b,c,d,e,f,g,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       PetscInt c (*) ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e (*) ! PetscInt
       PetscScalar f (*) ! PetscScalar
       InsertMode g ! InsertMode
       integer z
       end subroutine
      subroutine MatMultDiagonalBlock(a,b,c,z)
       Mat a ! Mat
       Vec b ! Vec
       Vec c ! Vec
       integer z
       end subroutine
      subroutine MatMult(a,b,c,z)
       Mat a ! Mat
       Vec b ! Vec
       Vec c ! Vec
       integer z
       end subroutine
      subroutine MatMultTranspose(a,b,c,z)
       Mat a ! Mat
       Vec b ! Vec
       Vec c ! Vec
       integer z
       end subroutine
      subroutine MatMultHermitianTranspose(a,b,c,z)
       Mat a ! Mat
       Vec b ! Vec
       Vec c ! Vec
       integer z
       end subroutine
      subroutine MatMultAdd(a,b,c,d,z)
       Mat a ! Mat
       Vec b ! Vec
       Vec c ! Vec
       Vec d ! Vec
       integer z
       end subroutine
      subroutine MatMultTransposeAdd(a,b,c,d,z)
       Mat a ! Mat
       Vec b ! Vec
       Vec c ! Vec
       Vec d ! Vec
       integer z
       end subroutine
      subroutine MatMultHermitianTransposeAdd(a,b,c,d,z)
       Mat a ! Mat
       Vec b ! Vec
       Vec c ! Vec
       Vec d ! Vec
       integer z
       end subroutine
      subroutine MatMultConstrained(a,b,c,z)
       Mat a ! Mat
       Vec b ! Vec
       Vec c ! Vec
       integer z
       end subroutine
      subroutine MatMultTransposeConstrained(a,b,c,z)
       Mat a ! Mat
       Vec b ! Vec
       Vec c ! Vec
       integer z
       end subroutine
      subroutine MatSolve(a,b,c,z)
       Mat a ! Mat
       Vec b ! Vec
       Vec c ! Vec
       integer z
       end subroutine
      subroutine MatMatSolve(a,b,c,z)
       Mat a ! Mat
       Mat b ! Mat
       Mat c ! Mat
       integer z
       end subroutine
      subroutine MatForwardSolve(a,b,c,z)
       Mat a ! Mat
       Vec b ! Vec
       Vec c ! Vec
       integer z
       end subroutine
      subroutine MatBackwardSolve(a,b,c,z)
       Mat a ! Mat
       Vec b ! Vec
       Vec c ! Vec
       integer z
       end subroutine
      subroutine MatSolveAdd(a,b,c,d,z)
       Mat a ! Mat
       Vec b ! Vec
       Vec c ! Vec
       Vec d ! Vec
       integer z
       end subroutine
      subroutine MatSolveTranspose(a,b,c,z)
       Mat a ! Mat
       Vec b ! Vec
       Vec c ! Vec
       integer z
       end subroutine
      subroutine MatSolveTransposeAdd(a,b,c,d,z)
       Mat a ! Mat
       Vec b ! Vec
       Vec c ! Vec
       Vec d ! Vec
       integer z
       end subroutine
      subroutine MatSOR(a,b,c,d,e,f,g,h,z)
       Mat a ! Mat
       Vec b ! Vec
       PetscReal c ! PetscReal
       MatSORType d ! MatSORType
       PetscReal e ! PetscReal
       PetscInt f ! PetscInt
       PetscInt g ! PetscInt
       Vec h ! Vec
       integer z
       end subroutine
      subroutine MatCopy(a,b,c,z)
       Mat a ! Mat
       Mat b ! Mat
       MatStructure c ! MatStructure
       integer z
       end subroutine
      subroutine MatDuplicate(a,b,c,z)
       Mat a ! Mat
       MatDuplicateOption b ! MatDuplicateOption
       Mat c ! Mat
       integer z
       end subroutine
      subroutine MatGetDiagonal(a,b,z)
       Mat a ! Mat
       Vec b ! Vec
       integer z
       end subroutine
      subroutine MatGetRowSum(a,b,z)
       Mat a ! Mat
       Vec b ! Vec
       integer z
       end subroutine
      subroutine MatTranspose(a,b,c,z)
       Mat a ! Mat
       MatReuse b ! MatReuse
       Mat c ! Mat
       integer z
       end subroutine
      subroutine MatIsTranspose(a,b,c,d,z)
       Mat a ! Mat
       Mat b ! Mat
       PetscReal c ! PetscReal
       PetscBool d ! PetscBool
       integer z
       end subroutine
      subroutine MatHermitianTranspose(a,b,c,z)
       Mat a ! Mat
       MatReuse b ! MatReuse
       Mat c ! Mat
       integer z
       end subroutine
      subroutine MatIsHermitianTranspose(a,b,c,d,z)
       Mat a ! Mat
       Mat b ! Mat
       PetscReal c ! PetscReal
       PetscBool d ! PetscBool
       integer z
       end subroutine
      subroutine MatPermute(a,b,c,d,z)
       Mat a ! Mat
       IS b ! IS
       IS c ! IS
       Mat d ! Mat
       integer z
       end subroutine
      subroutine MatEqual(a,b,c,z)
       Mat a ! Mat
       Mat b ! Mat
       PetscBool c ! PetscBool
       integer z
       end subroutine
      subroutine MatDiagonalScale(a,b,c,z)
       Mat a ! Mat
       Vec b ! Vec
       Vec c ! Vec
       integer z
       end subroutine
      subroutine MatScale(a,b,z)
       Mat a ! Mat
       PetscScalar b ! PetscScalar
       integer z
       end subroutine
      subroutine MatNorm(a,b,c,z)
       Mat a ! Mat
       NormType b ! NormType
       PetscReal c ! PetscReal
       integer z
       end subroutine
      subroutine MatAssemblyBegin(a,b,z)
       Mat a ! Mat
       MatAssemblyType b ! MatAssemblyType
       integer z
       end subroutine
      subroutine MatAssembled(a,b,z)
       Mat a ! Mat
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine MatAssemblyEnd(a,b,z)
       Mat a ! Mat
       MatAssemblyType b ! MatAssemblyType
       integer z
       end subroutine
      subroutine MatSetOption(a,b,c,z)
       Mat a ! Mat
       MatOption b ! MatOption
       PetscBool c ! PetscBool
       integer z
       end subroutine
      subroutine MatGetOption(a,b,c,z)
       Mat a ! Mat
       MatOption b ! MatOption
       PetscBool c ! PetscBool
       integer z
       end subroutine
      subroutine MatZeroEntries(a,z)
       Mat a ! Mat
       integer z
       end subroutine
      subroutine MatGetSize(a,b,c,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine MatGetLocalSize(a,b,c,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine MatGetOwnershipRangeColumn(a,b,c,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine MatGetOwnershipRange(a,b,c,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine MatIncreaseOverlap(a,b,c,d,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       IS c (*) ! IS
       PetscInt d ! PetscInt
       integer z
       end subroutine
      subroutine MatIncreaseOverlapSplit(a,b,c,d,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       IS c (*) ! IS
       PetscInt d ! PetscInt
       integer z
       end subroutine
      subroutine MatGetBlockSize(a,b,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine MatGetBlockSizes(a,b,c,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine MatSetBlockSize(a,b,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine MatSetBlockSizes(a,b,c,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine MatSetBlockSizesFromMats(a,b,c,z)
       Mat a ! Mat
       Mat b ! Mat
       Mat c ! Mat
       integer z
       end subroutine
      subroutine MatResidual(a,b,c,d,z)
       Mat a ! Mat
       Vec b ! Vec
       Vec c ! Vec
       Vec d ! Vec
       integer z
       end subroutine
      subroutine MatSetUnfactored(a,z)
       Mat a ! Mat
       integer z
       end subroutine
      subroutine MatGetSubMatrix(a,b,c,d,e,z)
       Mat a ! Mat
       IS b ! IS
       IS c ! IS
       MatReuse d ! MatReuse
       Mat e ! Mat
       integer z
       end subroutine
      subroutine MatStashSetInitialSize(a,b,c,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine MatInterpolateAdd(a,b,c,d,z)
       Mat a ! Mat
       Vec b ! Vec
       Vec c ! Vec
       Vec d ! Vec
       integer z
       end subroutine
      subroutine MatInterpolate(a,b,c,z)
       Mat a ! Mat
       Vec b ! Vec
       Vec c ! Vec
       integer z
       end subroutine
      subroutine MatRestrict(a,b,c,z)
       Mat a ! Mat
       Vec b ! Vec
       Vec c ! Vec
       integer z
       end subroutine
      subroutine MatGetNullSpace(a,b,z)
       Mat a ! Mat
       MatNullSpace b ! MatNullSpace
       integer z
       end subroutine
      subroutine MatSetNullSpace(a,b,z)
       Mat a ! Mat
       MatNullSpace b ! MatNullSpace
       integer z
       end subroutine
      subroutine MatGetTransposeNullSpace(a,b,z)
       Mat a ! Mat
       MatNullSpace b ! MatNullSpace
       integer z
       end subroutine
      subroutine MatSetTransposeNullSpace(a,b,z)
       Mat a ! Mat
       MatNullSpace b ! MatNullSpace
       integer z
       end subroutine
      subroutine MatSetNearNullSpace(a,b,z)
       Mat a ! Mat
       MatNullSpace b ! MatNullSpace
       integer z
       end subroutine
      subroutine MatGetNearNullSpace(a,b,z)
       Mat a ! Mat
       MatNullSpace b ! MatNullSpace
       integer z
       end subroutine
      subroutine MatDiagonalScaleLocal(a,b,z)
       Mat a ! Mat
       Vec b ! Vec
       integer z
       end subroutine
      subroutine MatGetInertia(a,b,c,d,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       integer z
       end subroutine
      subroutine MatIsSymmetric(a,b,c,z)
       Mat a ! Mat
       PetscReal b ! PetscReal
       PetscBool c ! PetscBool
       integer z
       end subroutine
      subroutine MatIsHermitian(a,b,c,z)
       Mat a ! Mat
       PetscReal b ! PetscReal
       PetscBool c ! PetscBool
       integer z
       end subroutine
      subroutine MatIsSymmetricKnown(a,b,c,z)
       Mat a ! Mat
       PetscBool b ! PetscBool
       PetscBool c ! PetscBool
       integer z
       end subroutine
      subroutine MatIsHermitianKnown(a,b,c,z)
       Mat a ! Mat
       PetscBool b ! PetscBool
       PetscBool c ! PetscBool
       integer z
       end subroutine
      subroutine MatIsStructurallySymmetric(a,b,z)
       Mat a ! Mat
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine MatStashGetInfo(a,b,c,d,e,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       integer z
       end subroutine
      subroutine MatFactorSetSchurIS(a,b,z)
       Mat a ! Mat
       IS b ! IS
       integer z
       end subroutine
      subroutine MatFactorCreateSchurComplement(a,b,z)
       Mat a ! Mat
       Mat b ! Mat
       integer z
       end subroutine
      subroutine MatFactorGetSchurComplement(a,b,z)
       Mat a ! Mat
       Mat b ! Mat
       integer z
       end subroutine
      subroutine MatFactorRestoreSchurComplement(a,b,z)
       Mat a ! Mat
       Mat b ! Mat
       integer z
       end subroutine
      subroutine MatFactorSolveSchurComplementTranspose(a,b,c,z)
       Mat a ! Mat
       Vec b ! Vec
       Vec c ! Vec
       integer z
       end subroutine
      subroutine MatFactorSolveSchurComplement(a,b,c,z)
       Mat a ! Mat
       Vec b ! Vec
       Vec c ! Vec
       integer z
       end subroutine
      subroutine MatFactorInvertSchurComplement(a,z)
       Mat a ! Mat
       integer z
       end subroutine
      subroutine MatPtAP(a,b,c,d,e,z)
       Mat a ! Mat
       Mat b ! Mat
       MatReuse c ! MatReuse
       PetscReal d ! PetscReal
       Mat e ! Mat
       integer z
       end subroutine
      subroutine MatPtAPNumeric(a,b,c,z)
       Mat a ! Mat
       Mat b ! Mat
       Mat c ! Mat
       integer z
       end subroutine
      subroutine MatPtAPSymbolic(a,b,c,d,z)
       Mat a ! Mat
       Mat b ! Mat
       PetscReal c ! PetscReal
       Mat d ! Mat
       integer z
       end subroutine
      subroutine MatRARt(a,b,c,d,e,z)
       Mat a ! Mat
       Mat b ! Mat
       MatReuse c ! MatReuse
       PetscReal d ! PetscReal
       Mat e ! Mat
       integer z
       end subroutine
      subroutine MatRARtNumeric(a,b,c,z)
       Mat a ! Mat
       Mat b ! Mat
       Mat c ! Mat
       integer z
       end subroutine
      subroutine MatRARtSymbolic(a,b,c,d,z)
       Mat a ! Mat
       Mat b ! Mat
       PetscReal c ! PetscReal
       Mat d ! Mat
       integer z
       end subroutine
      subroutine MatMatMult(a,b,c,d,e,z)
       Mat a ! Mat
       Mat b ! Mat
       MatReuse c ! MatReuse
       PetscReal d ! PetscReal
       Mat e ! Mat
       integer z
       end subroutine
      subroutine MatMatMultSymbolic(a,b,c,d,z)
       Mat a ! Mat
       Mat b ! Mat
       PetscReal c ! PetscReal
       Mat d ! Mat
       integer z
       end subroutine
      subroutine MatMatMultNumeric(a,b,c,z)
       Mat a ! Mat
       Mat b ! Mat
       Mat c ! Mat
       integer z
       end subroutine
      subroutine MatMatTransposeMult(a,b,c,d,e,z)
       Mat a ! Mat
       Mat b ! Mat
       MatReuse c ! MatReuse
       PetscReal d ! PetscReal
       Mat e ! Mat
       integer z
       end subroutine
      subroutine MatTransposeMatMult(a,b,c,d,e,z)
       Mat a ! Mat
       Mat b ! Mat
       MatReuse c ! MatReuse
       PetscReal d ! PetscReal
       Mat e ! Mat
       integer z
       end subroutine
      subroutine MatMatMatMult(a,b,c,d,e,f,z)
       Mat a ! Mat
       Mat b ! Mat
       Mat c ! Mat
       MatReuse d ! MatReuse
       PetscReal e ! PetscReal
       Mat f ! Mat
       integer z
       end subroutine
      subroutine MatCreateRedundantMatrix(a,b,c,d,e,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       integer c ! MPI_Comm
       MatReuse d ! MatReuse
       Mat e ! Mat
       integer z
       end subroutine
      subroutine MatGetLocalSubMatrix(a,b,c,d,z)
       Mat a ! Mat
       IS b ! IS
       IS c ! IS
       Mat d ! Mat
       integer z
       end subroutine
      subroutine MatRestoreLocalSubMatrix(a,b,c,d,z)
       Mat a ! Mat
       IS b ! IS
       IS c ! IS
       Mat d ! Mat
       integer z
       end subroutine
      subroutine MatFindZeroDiagonals(a,b,z)
       Mat a ! Mat
       IS b ! IS
       integer z
       end subroutine
      subroutine MatFindOffBlockDiagonalEntries(a,b,z)
       Mat a ! Mat
       IS b ! IS
       integer z
       end subroutine
      subroutine MatGetNonzeroState(a,b,z)
       Mat a ! Mat
       PetscObjectState b ! PetscObjectState
       integer z
       end subroutine
      subroutine MatCreateMPIMatConcatenateSeqMat(a,b,c,d,e,z)
       integer a ! MPI_Comm
       Mat b ! Mat
       PetscInt c ! PetscInt
       MatReuse d ! MatReuse
       Mat e ! Mat
       integer z
       end subroutine
      subroutine MatSubdomainsCreateCoalesce(a,b,c,d,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       IS d (*) ! IS
       integer z
       end subroutine
      subroutine MatNullSpaceCreateRigidBody(a,b,z)
       Vec a ! Vec
       MatNullSpace b ! MatNullSpace
       integer z
       end subroutine
      subroutine MatNullSpaceCreate(a,b,c,d,e,z)
       integer a ! MPI_Comm
       PetscBool b ! PetscBool
       PetscInt c ! PetscInt
       Vec d (*) ! Vec
       MatNullSpace e ! MatNullSpace
       integer z
       end subroutine
      subroutine MatNullSpaceDestroy(a,z)
       MatNullSpace a ! MatNullSpace
       integer z
       end subroutine
      subroutine MatNullSpaceTest(a,b,c,z)
       MatNullSpace a ! MatNullSpace
       Mat b ! Mat
       PetscBool c ! PetscBool
       integer z
       end subroutine
      subroutine MatHasOperation(a,b,c,z)
       Mat a ! Mat
       MatOperation b ! MatOperation
       PetscBool c ! PetscBool
       integer z
       end subroutine
      subroutine MatPreallocatorPreallocate(a,b,c,z)
       Mat a ! Mat
       PetscBool b ! PetscBool
       Mat c ! Mat
       integer z
       end subroutine
      subroutine MatCreateLocalRef(a,b,c,d,z)
       Mat a ! Mat
       IS b ! IS
       IS c ! IS
       Mat d ! Mat
       integer z
       end subroutine
      subroutine MatCreateAIJCUSP(a,b,c,d,e,f,g,h,i,j,z)
       integer a ! MPI_Comm
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       PetscInt f ! PetscInt
       PetscInt g (*) ! PetscInt
       PetscInt h ! PetscInt
       PetscInt i (*) ! PetscInt
       Mat j ! Mat
       integer z
       end subroutine
      subroutine MatSuperluSetILUDropTol(a,b,z)
       Mat a ! Mat
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine MatSeqAIJSetColumnIndices(a,b,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine MatStoreValues(a,z)
       Mat a ! Mat
       integer z
       end subroutine
      subroutine MatRetrieveValues(a,z)
       Mat a ! Mat
       integer z
       end subroutine
      subroutine MatSeqAIJSetPreallocationCSR(a,b,c,d,z)
       Mat a ! Mat
       PetscInt b (*) ! PetscInt
       PetscInt c (*) ! PetscInt
       PetscScalar d (*) ! PetscScalar
       integer z
       end subroutine
      subroutine MatCreateSeqAIJWithArrays(a,b,c,d,e,f,g,z)
       integer a ! MPI_Comm
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       PetscScalar f ! PetscScalar
       Mat g ! Mat
       integer z
       end subroutine
      subroutine MatMPIAIJSetUseScalableIncreaseOverlap(a,b,z)
       Mat a ! Mat
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine MatMPIAIJSetPreallocationCSR(a,b,c,d,z)
       Mat a ! Mat
       PetscInt b (*) ! PetscInt
       PetscInt c (*) ! PetscInt
       PetscScalar d (*) ! PetscScalar
       integer z
       end subroutine
      subroutine MatCreateMPIAIJWithArrays(a,b,c,d,e,f,g,h,i,z)
       integer a ! MPI_Comm
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       PetscInt f (*) ! PetscInt
       PetscInt g (*) ! PetscInt
       PetscScalar h (*) ! PetscScalar
       Mat i ! Mat
       integer z
       end subroutine
      subroutine MatMPIAIJGetLocalMat(a,b,c,z)
       Mat a ! Mat
       MatReuse b ! MatReuse
       Mat c ! Mat
       integer z
       end subroutine
      subroutine MatCreateVecsFFTW(a,b,c,d,z)
       Mat a ! Mat
       Vec b ! Vec
       Vec c ! Vec
       Vec d ! Vec
       integer z
       end subroutine
      subroutine VecScatterPetscToFFTW(a,b,c,z)
       Mat a ! Mat
       Vec b ! Vec
       Vec c ! Vec
       integer z
       end subroutine
      subroutine VecScatterFFTWToPetsc(a,b,c,z)
       Mat a ! Mat
       Vec b ! Vec
       Vec c ! Vec
       integer z
       end subroutine
      subroutine MatCreateSeqCUFFT(a,b,c,d,z)
       integer a ! MPI_Comm
       PetscInt b ! PetscInt
       PetscInt c (*) ! PetscInt
       Mat d ! Mat
       integer z
       end subroutine
      subroutine MatNestGetSubMat(a,b,c,d,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       Mat d ! Mat
       integer z
       end subroutine
      subroutine MatNestSetSubMat(a,b,c,d,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       Mat d ! Mat
       integer z
       end subroutine
      subroutine MatNestGetSize(a,b,c,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine MatNestSetSubMats(a,b,c,d,e,f,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       IS c (*) ! IS
       PetscInt d ! PetscInt
       IS e (*) ! IS
       Mat f (*) ! Mat
       integer z
       end subroutine
      subroutine MatCreateLRC(a,b,c,d,z)
       Mat a ! Mat
       Mat b ! Mat
       Mat c ! Mat
       Mat d ! Mat
       integer z
       end subroutine
      subroutine MatCreateNormalHermitian(a,b,z)
       Mat a ! Mat
       Mat b ! Mat
       integer z
       end subroutine
      subroutine MatCreateNormal(a,b,z)
       Mat a ! Mat
       Mat b ! Mat
       integer z
       end subroutine
      subroutine MatMkl_CPardisoSetCntl(a,b,c,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine MatMFFDWPSetComputeNormU(a,b,z)
       Mat a ! Mat
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine MatMFFDDSSetUmin(a,b,z)
       Mat a ! Mat
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine MatCreateMFFD(a,b,c,d,e,f,z)
       integer a ! MPI_Comm
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       Mat f ! Mat
       integer z
       end subroutine
      subroutine MatMFFDGetH(a,b,z)
       Mat a ! Mat
       PetscScalar b ! PetscScalar
       integer z
       end subroutine
      subroutine MatMFFDSetPeriod(a,b,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine MatMFFDSetFunctionError(a,b,z)
       Mat a ! Mat
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine MatMFFDSetHHistory(a,b,c,z)
       Mat a ! Mat
       PetscScalar b (*) ! PetscScalar
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine MatMFFDResetHHistory(a,z)
       Mat a ! Mat
       integer z
       end subroutine
      subroutine MatMFFDSetBase(a,b,c,z)
       Mat a ! Mat
       Vec b ! Vec
       Vec c ! Vec
       integer z
       end subroutine
      subroutine MatMumpsSetIcntl(a,b,c,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine MatMumpsGetIcntl(a,b,c,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine MatMumpsSetCntl(a,b,c,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       PetscReal c ! PetscReal
       integer z
       end subroutine
      subroutine MatMumpsGetCntl(a,b,c,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       PetscReal c ! PetscReal
       integer z
       end subroutine
      subroutine MatMumpsGetInfo(a,b,c,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine MatMumpsGetInfog(a,b,c,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine MatMumpsGetRinfo(a,b,c,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       PetscReal c ! PetscReal
       integer z
       end subroutine
      subroutine MatMumpsGetRinfog(a,b,c,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       PetscReal c ! PetscReal
       integer z
       end subroutine
      subroutine MatReorderForNonzeroDiagonal(a,b,c,d,z)
       Mat a ! Mat
       PetscReal b ! PetscReal
       IS c ! IS
       IS d ! IS
       integer z
       end subroutine
      subroutine MatMultEqual(a,b,c,d,z)
       Mat a ! Mat
       Mat b ! Mat
       PetscInt c ! PetscInt
       PetscBool d ! PetscBool
       integer z
       end subroutine
      subroutine MatMultAddEqual(a,b,c,d,z)
       Mat a ! Mat
       Mat b ! Mat
       PetscInt c ! PetscInt
       PetscBool d ! PetscBool
       integer z
       end subroutine
      subroutine MatMultTransposeEqual(a,b,c,d,z)
       Mat a ! Mat
       Mat b ! Mat
       PetscInt c ! PetscInt
       PetscBool d ! PetscBool
       integer z
       end subroutine
      subroutine MatMultTransposeAddEqual(a,b,c,d,z)
       Mat a ! Mat
       Mat b ! Mat
       PetscInt c ! PetscInt
       PetscBool d ! PetscBool
       integer z
       end subroutine
      subroutine MatMatMultEqual(a,b,c,d,e,z)
       Mat a ! Mat
       Mat b ! Mat
       Mat c ! Mat
       PetscInt d ! PetscInt
       PetscBool e ! PetscBool
       integer z
       end subroutine
      subroutine MatTransposeMatMultEqual(a,b,c,d,e,z)
       Mat a ! Mat
       Mat b ! Mat
       Mat c ! Mat
       PetscInt d ! PetscInt
       PetscBool e ! PetscBool
       integer z
       end subroutine
      subroutine MatCreate(a,b,z)
       integer a ! MPI_Comm
       Mat b ! Mat
       integer z
       end subroutine
      subroutine MatSetErrorIfFailure(a,b,z)
       Mat a ! Mat
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine MatSetSizes(a,b,c,d,e,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       integer z
       end subroutine
      subroutine MatSetFromOptions(a,z)
       Mat a ! Mat
       integer z
       end subroutine
      subroutine MatXAIJSetPreallocation(a,b,c,d,e,f,z)
       Mat a ! Mat
       PetscInt b ! PetscInt
       PetscInt c (*) ! PetscInt
       PetscInt d (*) ! PetscInt
       PetscInt e (*) ! PetscInt
       PetscInt f (*) ! PetscInt
       integer z
       end subroutine
      subroutine MatAXPY(a,b,c,d,z)
       Mat a ! Mat
       PetscScalar b ! PetscScalar
       Mat c ! Mat
       MatStructure d ! MatStructure
       integer z
       end subroutine
      subroutine MatShift(a,b,z)
       Mat a ! Mat
       PetscScalar b ! PetscScalar
       integer z
       end subroutine
      subroutine MatDiagonalSet(a,b,c,z)
       Mat a ! Mat
       Vec b ! Vec
       InsertMode c ! InsertMode
       integer z
       end subroutine
      subroutine MatAYPX(a,b,c,d,z)
       Mat a ! Mat
       PetscScalar b ! PetscScalar
       Mat c ! Mat
       MatStructure d ! MatStructure
       integer z
       end subroutine
      subroutine MatComputeExplicitOperator(a,b,z)
       Mat a ! Mat
       Mat b ! Mat
       integer z
       end subroutine
      subroutine MatChop(a,b,z)
       Mat a ! Mat
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine MatGetColumnVector(a,b,c,z)
       Mat a ! Mat
       Vec b ! Vec
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine MatGetColumnNorms(a,b,c,z)
       Mat a ! Mat
       NormType b ! NormType
       PetscReal c (*) ! PetscReal
       integer z
       end subroutine
      subroutine MatComputeBandwidth(a,b,c,z)
       Mat a ! Mat
       PetscReal b ! PetscReal
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine MatScatterGetVecScatter(a,b,z)
       Mat a ! Mat
       VecScatter b ! VecScatter
       integer z
       end subroutine
      subroutine MatScatterSetVecScatter(a,b,z)
       Mat a ! Mat
       VecScatter b ! VecScatter
       integer z
       end subroutine
