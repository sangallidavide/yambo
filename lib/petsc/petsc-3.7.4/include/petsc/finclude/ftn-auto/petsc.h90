      subroutine DMNetworkMonitorCreate(a,b,z)
       DM a ! DM
       DMNetworkMonitor b ! DMNetworkMonitor
       integer z
       end subroutine
      subroutine DMNetworkMonitorDestroy(a,z)
       DMNetworkMonitor a ! DMNetworkMonitor
       integer z
       end subroutine
      subroutine DMNetworkMonitorPop(a,z)
       DMNetworkMonitor a ! DMNetworkMonitor
       integer z
       end subroutine
      subroutine DMNetworkMonitorAdd(a,b,c,d,e,f,g,h,i,z)
       DMNetworkMonitor a ! DMNetworkMonitor
       character b ! char
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       PetscInt f ! PetscInt
       PetscReal g ! PetscReal
       PetscReal h ! PetscReal
       PetscBool i ! PetscBool
       integer z
       end subroutine
      subroutine DMNetworkMonitorView(a,b,z)
       DMNetworkMonitor a ! DMNetworkMonitor
       Vec b ! Vec
       integer z
       end subroutine
      subroutine DMNetworkCreate(a,b,z)
       integer a ! MPI_Comm
       DM b ! DM
       integer z
       end subroutine
      subroutine DMNetworkSetSizes(a,b,c,d,e,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       integer z
       end subroutine
      subroutine DMNetworkSetEdgeList(a,b,z)
       DM a ! DM
       integer b (*) ! int
       integer z
       end subroutine
      subroutine DMNetworkLayoutSetUp(a,z)
       DM a ! DM
       integer z
       end subroutine
      subroutine DMNetworkRegisterComponent(a,b,c,d,z)
       DM a ! DM
       character b ! char
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       integer z
       end subroutine
      subroutine DMNetworkGetVertexRange(a,b,c,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine DMNetworkGetEdgeRange(a,b,c,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine DMNetworkGetNumComponents(a,b,c,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine DMNetworkGetComponentTypeOffset(a,b,c,d,e,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       integer z
       end subroutine
      subroutine DMNetworkGetVariableOffset(a,b,c,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine DMNetworkGetVariableGlobalOffset(a,b,c,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine DMNetworkAddNumVariables(a,b,c,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine DMNetworkGetNumVariables(a,b,c,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine DMNetworkSetNumVariables(a,b,c,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine DMNetworkDistribute(a,b,c,z)
       DM a ! DM
       PetscInt b ! PetscInt
       DM c ! DM
       integer z
       end subroutine
      subroutine DMNetworkIsGhostVertex(a,b,c,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscBool c ! PetscBool
       integer z
       end subroutine
      subroutine DMNetworkHasJacobian(a,b,c,z)
       DM a ! DM
       PetscBool b ! PetscBool
       PetscBool c ! PetscBool
       integer z
       end subroutine
      subroutine DMNetworkEdgeSetMatrix(a,b,c,z)
       DM a ! DM
       PetscInt b ! PetscInt
       Mat c (*) ! Mat
       integer z
       end subroutine
      subroutine DMNetworkVertexSetMatrix(a,b,c,z)
       DM a ! DM
       PetscInt b ! PetscInt
       Mat c (*) ! Mat
       integer z
       end subroutine
