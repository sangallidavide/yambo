      subroutine TSAlphaUseAdapt(a,b,z)
       TS a ! TS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine TSAlphaSetRadius(a,b,z)
       TS a ! TS
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine TSAlphaSetParams(a,b,c,d,z)
       TS a ! TS
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
       PetscReal d ! PetscReal
       integer z
       end subroutine
      subroutine TSAlphaGetParams(a,b,c,d,z)
       TS a ! TS
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
       PetscReal d ! PetscReal
       integer z
       end subroutine
      subroutine TSAlpha2UseAdapt(a,b,z)
       TS a ! TS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine TSAlpha2SetRadius(a,b,z)
       TS a ! TS
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine TSAlpha2SetParams(a,b,c,d,e,z)
       TS a ! TS
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
       PetscReal d ! PetscReal
       PetscReal e ! PetscReal
       integer z
       end subroutine
      subroutine TSAlpha2GetParams(a,b,c,d,e,z)
       TS a ! TS
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
       PetscReal d ! PetscReal
       PetscReal e ! PetscReal
       integer z
       end subroutine
      subroutine TSARKIMEXSetFullyImplicit(a,b,z)
       TS a ! TS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine DMPlexTSGetGeometryFVM(a,b,c,d,z)
       DM a ! DM
       Vec b ! Vec
       Vec c ! Vec
       PetscReal d ! PetscReal
       integer z
       end subroutine
      subroutine TSThetaGetTheta(a,b,z)
       TS a ! TS
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine TSThetaSetTheta(a,b,z)
       TS a ! TS
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine TSThetaGetEndpoint(a,b,z)
       TS a ! TS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine TSThetaSetEndpoint(a,b,z)
       TS a ! TS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine TSAdaptReset(a,z)
       TSAdapt a ! TSAdapt
       integer z
       end subroutine
      subroutine TSAdaptSetMonitor(a,b,z)
       TSAdapt a ! TSAdapt
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine TSAdaptSetStepLimits(a,b,c,z)
       TSAdapt a ! TSAdapt
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
       integer z
       end subroutine
      subroutine TSAdaptCandidatesClear(a,z)
       TSAdapt a ! TSAdapt
       integer z
       end subroutine
      subroutine TSAdaptCheckStage(a,b,c,d,e,z)
       TSAdapt a ! TSAdapt
       TS b ! TS
       PetscReal c ! PetscReal
       Vec d ! Vec
       PetscBool e ! PetscBool
       integer z
       end subroutine
      subroutine TSAdaptCreate(a,b,z)
       integer a ! MPI_Comm
       TSAdapt b ! TSAdapt
       integer z
       end subroutine
      subroutine TSBDFSetOrder(a,b,z)
       TS a ! TS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine TSBDFGetOrder(a,b,z)
       TS a ! TS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine TSBDFUseAdapt(a,b,z)
       TS a ! TS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine TSSSPSetNumStages(a,b,z)
       TS a ! TS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine TSSSPGetNumStages(a,b,z)
       TS a ! TS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine TSPseudoVerifyTimeStep(a,b,c,d,z)
       TS a ! TS
       Vec b ! Vec
       PetscReal c ! PetscReal
       PetscBool d ! PetscBool
       integer z
       end subroutine
      subroutine TSPseudoSetTimeStepIncrement(a,b,z)
       TS a ! TS
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine TSPseudoSetMaxTimeStep(a,b,z)
       TS a ! TS
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine TSPseudoIncrementDtFromInitialDt(a,z)
       TS a ! TS
       integer z
       end subroutine
      subroutine TSSetEventTolerances(a,b,c,z)
       TS a ! TS
       PetscReal b ! PetscReal
       PetscReal c (*) ! PetscReal
       integer z
       end subroutine
      subroutine TSSundialsSetType(a,b,z)
       TS a ! TS
       TSSundialsLmmType b ! TSSundialsLmmType
       integer z
       end subroutine
      subroutine TSSundialsSetMaxl(a,b,z)
       TS a ! TS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine TSSundialsSetLinearTolerance(a,b,z)
       TS a ! TS
       double precision b ! double
       integer z
       end subroutine
      subroutine TSSundialsSetGramSchmidtType(a,b,z)
       TS a ! TS
       TSSundialsGramSchmidtType b ! TSSundialsGramSchmidtType
       integer z
       end subroutine
      subroutine TSSundialsSetTolerance(a,b,c,z)
       TS a ! TS
       double precision b ! double
       double precision c ! double
       integer z
       end subroutine
      subroutine TSSundialsGetPC(a,b,z)
       TS a ! TS
       PC b ! PC
       integer z
       end subroutine
      subroutine TSSundialsSetMinTimeStep(a,b,z)
       TS a ! TS
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine TSSundialsSetMaxTimeStep(a,b,z)
       TS a ! TS
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine TSSundialsMonitorInternalSteps(a,b,z)
       TS a ! TS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine TSSetFromOptions(a,z)
       TS a ! TS
       integer z
       end subroutine
      subroutine TSSetSaveTrajectory(a,z)
       TS a ! TS
       integer z
       end subroutine
      subroutine TSComputeRHSJacobian(a,b,c,d,e,z)
       TS a ! TS
       PetscReal b ! PetscReal
       Vec c ! Vec
       Mat d ! Mat
       Mat e ! Mat
       integer z
       end subroutine
      subroutine TSComputeRHSFunction(a,b,c,d,z)
       TS a ! TS
       PetscReal b ! PetscReal
       Vec c ! Vec
       Vec d ! Vec
       integer z
       end subroutine
      subroutine TSComputeSolutionFunction(a,b,c,z)
       TS a ! TS
       PetscReal b ! PetscReal
       Vec c ! Vec
       integer z
       end subroutine
      subroutine TSComputeForcingFunction(a,b,c,z)
       TS a ! TS
       PetscReal b ! PetscReal
       Vec c ! Vec
       integer z
       end subroutine
      subroutine TSComputeIFunction(a,b,c,d,e,f,z)
       TS a ! TS
       PetscReal b ! PetscReal
       Vec c ! Vec
       Vec d ! Vec
       Vec e ! Vec
       PetscBool f ! PetscBool
       integer z
       end subroutine
      subroutine TSComputeIJacobian(a,b,c,d,e,f,g,h,z)
       TS a ! TS
       PetscReal b ! PetscReal
       Vec c ! Vec
       Vec d ! Vec
       PetscReal e ! PetscReal
       Mat f ! Mat
       Mat g ! Mat
       PetscBool h ! PetscBool
       integer z
       end subroutine
      subroutine TSRHSJacobianSetReuse(a,b,z)
       TS a ! TS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine TSComputeI2Function(a,b,c,d,e,f,z)
       TS a ! TS
       PetscReal b ! PetscReal
       Vec c ! Vec
       Vec d ! Vec
       Vec e ! Vec
       Vec f ! Vec
       integer z
       end subroutine
      subroutine TSComputeI2Jacobian(a,b,c,d,e,f,g,h,i,z)
       TS a ! TS
       PetscReal b ! PetscReal
       Vec c ! Vec
       Vec d ! Vec
       Vec e ! Vec
       PetscReal f ! PetscReal
       PetscReal g ! PetscReal
       Mat h ! Mat
       Mat i ! Mat
       integer z
       end subroutine
      subroutine TS2SetSolution(a,b,c,z)
       TS a ! TS
       Vec b ! Vec
       Vec c ! Vec
       integer z
       end subroutine
      subroutine TS2GetSolution(a,b,c,z)
       TS a ! TS
       Vec b ! Vec
       Vec c ! Vec
       integer z
       end subroutine
      subroutine TSGetTimeStepNumber(a,b,z)
       TS a ! TS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine TSSetInitialTimeStep(a,b,c,z)
       TS a ! TS
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
       integer z
       end subroutine
      subroutine TSSetTimeStep(a,b,z)
       TS a ! TS
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine TSSetExactFinalTime(a,b,z)
       TS a ! TS
       TSExactFinalTimeOption b ! TSExactFinalTimeOption
       integer z
       end subroutine
      subroutine TSGetTimeStep(a,b,z)
       TS a ! TS
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine TSGetSolution(a,b,z)
       TS a ! TS
       Vec b ! Vec
       integer z
       end subroutine
      subroutine TSGetCostGradients(a,b,c,d,z)
       TS a ! TS
       PetscInt b ! PetscInt
       Vec c ! Vec
       Vec d ! Vec
       integer z
       end subroutine
      subroutine TSSetProblemType(a,b,z)
       TS a ! TS
       TSProblemType b ! TSProblemType
       integer z
       end subroutine
      subroutine TSSetUp(a,z)
       TS a ! TS
       integer z
       end subroutine
      subroutine TSAdjointSetUp(a,z)
       TS a ! TS
       integer z
       end subroutine
      subroutine TSReset(a,z)
       TS a ! TS
       integer z
       end subroutine
      subroutine TSDestroy(a,z)
       TS a ! TS
       integer z
       end subroutine
      subroutine TSGetSNES(a,b,z)
       TS a ! TS
       SNES b ! SNES
       integer z
       end subroutine
      subroutine TSSetSNES(a,b,z)
       TS a ! TS
       SNES b ! SNES
       integer z
       end subroutine
      subroutine TSGetKSP(a,b,z)
       TS a ! TS
       KSP b ! KSP
       integer z
       end subroutine
      subroutine TSGetDuration(a,b,c,z)
       TS a ! TS
       PetscInt b ! PetscInt
       PetscReal c ! PetscReal
       integer z
       end subroutine
      subroutine TSSetDuration(a,b,c,z)
       TS a ! TS
       PetscInt b ! PetscInt
       PetscReal c ! PetscReal
       integer z
       end subroutine
      subroutine TSSetSolution(a,b,z)
       TS a ! TS
       Vec b ! Vec
       integer z
       end subroutine
      subroutine TSAdjointSetSteps(a,b,z)
       TS a ! TS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine TSSetCostGradients(a,b,c,d,z)
       TS a ! TS
       PetscInt b ! PetscInt
       Vec c ! Vec
       Vec d ! Vec
       integer z
       end subroutine
      subroutine TSGetCostIntegral(a,b,z)
       TS a ! TS
       Vec b ! Vec
       integer z
       end subroutine
      subroutine TSAdjointComputeCostIntegrand(a,b,c,d,z)
       TS a ! TS
       PetscReal b ! PetscReal
       Vec c ! Vec
       Vec d ! Vec
       integer z
       end subroutine
      subroutine TSAdjointComputeDRDYFunction(a,b,c,d,z)
       TS a ! TS
       PetscReal b ! PetscReal
       Vec c ! Vec
       Vec d ! Vec
       integer z
       end subroutine
      subroutine TSAdjointComputeDRDPFunction(a,b,c,d,z)
       TS a ! TS
       PetscReal b ! PetscReal
       Vec c ! Vec
       Vec d ! Vec
       integer z
       end subroutine
      subroutine TSPreStep(a,z)
       TS a ! TS
       integer z
       end subroutine
      subroutine TSPreStage(a,b,z)
       TS a ! TS
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine TSPostStage(a,b,c,d,z)
       TS a ! TS
       PetscReal b ! PetscReal
       PetscInt c ! PetscInt
       Vec d ! Vec
       integer z
       end subroutine
      subroutine TSPostStep(a,z)
       TS a ! TS
       integer z
       end subroutine
      subroutine TSInterpolate(a,b,c,z)
       TS a ! TS
       PetscReal b ! PetscReal
       Vec c ! Vec
       integer z
       end subroutine
      subroutine TSStep(a,z)
       TS a ! TS
       integer z
       end subroutine
      subroutine TSAdjointStep(a,z)
       TS a ! TS
       integer z
       end subroutine
      subroutine TSEvaluateWLTE(a,b,c,d,z)
       TS a ! TS
       NormType b ! NormType
       PetscInt c ! PetscInt
       PetscReal d ! PetscReal
       integer z
       end subroutine
      subroutine TSEvaluateStep(a,b,c,d,z)
       TS a ! TS
       PetscInt b ! PetscInt
       Vec c ! Vec
       PetscBool d ! PetscBool
       integer z
       end subroutine
      subroutine TSForwardCostIntegral(a,z)
       TS a ! TS
       integer z
       end subroutine
      subroutine TSSolve(a,b,z)
       TS a ! TS
       Vec b ! Vec
       integer z
       end subroutine
      subroutine TSAdjointCostIntegral(a,z)
       TS a ! TS
       integer z
       end subroutine
      subroutine TSAdjointSolve(a,z)
       TS a ! TS
       integer z
       end subroutine
      subroutine TSGetTime(a,b,z)
       TS a ! TS
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine TSGetPrevTime(a,b,z)
       TS a ! TS
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine TSSetTime(a,b,z)
       TS a ! TS
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine TSSetDM(a,b,z)
       TS a ! TS
       DM b ! DM
       integer z
       end subroutine
      subroutine TSGetDM(a,b,z)
       TS a ! TS
       DM b ! DM
       integer z
       end subroutine
      subroutine TSGetEquationType(a,b,z)
       TS a ! TS
       TSEquationType b ! TSEquationType
       integer z
       end subroutine
      subroutine TSSetEquationType(a,b,z)
       TS a ! TS
       TSEquationType b ! TSEquationType
       integer z
       end subroutine
      subroutine TSGetConvergedReason(a,b,z)
       TS a ! TS
       TSConvergedReason b ! TSConvergedReason
       integer z
       end subroutine
      subroutine TSSetConvergedReason(a,b,z)
       TS a ! TS
       TSConvergedReason b ! TSConvergedReason
       integer z
       end subroutine
      subroutine TSGetSolveTime(a,b,z)
       TS a ! TS
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine TSGetTotalSteps(a,b,z)
       TS a ! TS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine TSGetSNESIterations(a,b,z)
       TS a ! TS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine TSGetKSPIterations(a,b,z)
       TS a ! TS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine TSGetStepRejections(a,b,z)
       TS a ! TS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine TSGetSNESFailures(a,b,z)
       TS a ! TS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine TSSetMaxStepRejections(a,b,z)
       TS a ! TS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine TSSetMaxSNESFailures(a,b,z)
       TS a ! TS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine TSSetErrorIfStepFails(a,b,z)
       TS a ! TS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine TSGetAdapt(a,b,z)
       TS a ! TS
       TSAdapt b ! TSAdapt
       integer z
       end subroutine
      subroutine TSSetTolerances(a,b,c,d,e,z)
       TS a ! TS
       PetscReal b ! PetscReal
       Vec c ! Vec
       PetscReal d ! PetscReal
       Vec e ! Vec
       integer z
       end subroutine
      subroutine TSGetTolerances(a,b,c,d,e,z)
       TS a ! TS
       PetscReal b ! PetscReal
       Vec c ! Vec
       PetscReal d ! PetscReal
       Vec e ! Vec
       integer z
       end subroutine
      subroutine TSErrorWeightedNorm2(a,b,c,d,z)
       TS a ! TS
       Vec b ! Vec
       Vec c ! Vec
       PetscReal d ! PetscReal
       integer z
       end subroutine
      subroutine TSErrorWeightedNormInfinity(a,b,c,d,z)
       TS a ! TS
       Vec b ! Vec
       Vec c ! Vec
       PetscReal d ! PetscReal
       integer z
       end subroutine
      subroutine TSErrorWeightedNorm(a,b,c,d,e,z)
       TS a ! TS
       Vec b ! Vec
       Vec c ! Vec
       NormType d ! NormType
       PetscReal e ! PetscReal
       integer z
       end subroutine
      subroutine TSSetCFLTimeLocal(a,b,z)
       TS a ! TS
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine TSGetCFLTime(a,b,z)
       TS a ! TS
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine TSVISetVariableBounds(a,b,c,z)
       TS a ! TS
       Vec b ! Vec
       Vec c ! Vec
       integer z
       end subroutine
      subroutine TSComputeLinearStability(a,b,c,d,e,z)
       TS a ! TS
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
       PetscReal d ! PetscReal
       PetscReal e ! PetscReal
       integer z
       end subroutine
      subroutine TSRollBack(a,z)
       TS a ! TS
       integer z
       end subroutine
      subroutine TSGetStages(a,b,c,z)
       TS a ! TS
       PetscInt b ! PetscInt
       Vec c ! Vec
       integer z
       end subroutine
      subroutine TSSetFunctionDomainError(a,b,z)
       TS a ! TS
       external b ! void function pointer
       integer z
       end subroutine
      subroutine TSFunctionDomainError(a,b,c,d,z)
       TS a ! TS
       PetscReal b ! PetscReal
       Vec c ! Vec
       PetscBool d ! PetscBool
       integer z
       end subroutine
      subroutine TSAdaptBasicSetClip(a,b,c,z)
       TSAdapt a ! TSAdapt
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
       integer z
       end subroutine
      subroutine TSAdaptBasicGetClip(a,b,c,z)
       TSAdapt a ! TSAdapt
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
       integer z
       end subroutine
      subroutine TSTrajectoryDestroy(a,z)
       TSTrajectory a ! TSTrajectory
       integer z
       end subroutine
      subroutine TSTrajectorySetMonitor(a,b,z)
       TSTrajectory a ! TSTrajectory
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine TSTrajectorySetFromOptions(a,b,z)
       TSTrajectory a ! TSTrajectory
       TS b ! TS
       integer z
       end subroutine
      subroutine TSTrajectorySetUp(a,b,z)
       TSTrajectory a ! TSTrajectory
       TS b ! TS
       integer z
       end subroutine
