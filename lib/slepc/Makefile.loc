#
#===============================
# Yambo package
#===============================
#
include ../../config/setup
include ../archive/package.list
#
LIBNAME=libslepc.a
LIBPATH=$(libs_prefix)/$(fc_kind)/${fc}/${yprecision}
LIBRARY=$(LIBPATH)/lib/$(LIBNAME)
#
PACKAGE=$(pkgname_slepc)
TARBALL=$(tarball_slepc)
#
include ../config/external_libs_commons.mk
include ../config/external_libs_defs.mk
#
CONFFLAGS=--prefix="$(LIBPATH)"
#
# MAIN target
#
all: $(LIBRARY)
#
uncompress:
	@$(get_the_lib)
	@if ! test -e $(PACKAGE) ; then \
         if test -d ../archive/slepc-src ; then \
          (ln -s ../archive/slepc-src ./$(PACKAGE)); \
          touch uncompressed.stamp; \
         else \
           $(uncompress) \
         fi \
        fi

configure: uncompress
	@if test -e $(PACKAGE) && ! test -f configured.stamp; then \
         echo "\t[$(PACKAGE)] configuration"; \
         cd $(PACKAGE); \
         echo "PETSC_DIR=$(LIBPATH)" >> ${compdir}/log/config_$(PACKAGE).log 2>&1; \
         PETSC_DIR=$(LIBPATH) \
         echo "SLEPC_DIR=$(PWD)/$(PACKAGE)" >> ${compdir}/log/config_$(PACKAGE).log 2>&1; \
         SLEPC_DIR=$(PWD)/$(PACKAGE) \
         echo "python3 ./configure $(CONFFLAGS)" >> ${compdir}/log/config_$(PACKAGE).log 2>&1; \
         python3 ./configure $(CONFFLAGS) >> ${compdir}/log/config_$(PACKAGE).log 2>&1; \
         cd - ; \
         touch configured.stamp; \
        fi

compile: uncompress configure
	@if test -e $(PACKAGE) && ! test -f compiled.stamp ; then \
         echo "\t[$(PACKAGE)] compilation"; \
         ( cd $(PACKAGE); $(make) -j1 SLEPC_DIR=$(PWD)/$(PACKAGE) PETSC_DIR=$(LIBPATH)  >> ${compdir}/log/compile_$(PACKAGE).log 2>&1 ) ; \
         touch compiled.stamp; \
        fi

install: uncompress configure compile
	@if ! test -f installed.stamp ; then \
         echo "\t[$(PACKAGE)] installation"; \
         ( cd $(PACKAGE); $(make) -j1 SLEPC_DIR=$(PWD)/$(PACKAGE) PETSC_DIR=$(LIBPATH) install  >> ${compdir}/log/compile_$(PACKAGE).log 2>&1 ); \
         touch installed.stamp; \
        fi

$(LIBRARY): uncompress configure compile install
#
# cleaning
#
clean:
	@$(call clean_the_lib,clean)

clean_all: clean
	@$(rm_the_lib)
